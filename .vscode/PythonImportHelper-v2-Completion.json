[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "medico.models",
        "description": "medico.models",
        "isExtraImport": true,
        "detail": "medico.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-e9qwar2%+svk5mlss5=e_op!t!#xy5^r&1nnsck&*8)-9+*31%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-e9qwar2%+svk5mlss5=e_op!t!#xy5^r&1nnsck&*8)-9+*31%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \"medico.apps.MedicoConfig\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \"medico.apps.MedicoConfig\",\n]\nMIDDLEWARE = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.urls'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('medico.urls')) # inclu as URLS do app Medico\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "medico.migrations.0001_initial",
        "description": "medico.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Especialidade',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=100)),",
        "detail": "medico.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "MedicoConfig",
        "kind": 6,
        "importPath": "medico.apps",
        "description": "medico.apps",
        "peekOfCode": "class MedicoConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'medico'",
        "detail": "medico.apps",
        "documentation": {}
    },
    {
        "label": "EspecialidadeForm",
        "kind": 6,
        "importPath": "medico.forms",
        "description": "medico.forms",
        "peekOfCode": "class EspecialidadeForm(forms.ModelForm):\n    class Meta:\n        model = Especialidade\n        fields = ['nome', 'descricao']\nclass MedicoForm(forms.ModelForm):\n    class Meta:\n        model = Medico\n        fields = ['nome', 'endereco', 'telefone', 'email', 'data_nascimento', 'crm', 'especialidade']",
        "detail": "medico.forms",
        "documentation": {}
    },
    {
        "label": "MedicoForm",
        "kind": 6,
        "importPath": "medico.forms",
        "description": "medico.forms",
        "peekOfCode": "class MedicoForm(forms.ModelForm):\n    class Meta:\n        model = Medico\n        fields = ['nome', 'endereco', 'telefone', 'email', 'data_nascimento', 'crm', 'especialidade']",
        "detail": "medico.forms",
        "documentation": {}
    },
    {
        "label": "Especialidade",
        "kind": 6,
        "importPath": "medico.models",
        "description": "medico.models",
        "peekOfCode": "class Especialidade(models.Model):\n    nome = models.CharField(max_length=100)\n    descricao = models.TextField()\n    def __str__(self):\n        return self.nome\nclass Medico(models.Model):\n    nome = models.CharField(max_length=200)\n    endereco = models.TextField()\n    telefone = models.CharField(max_length=20)\n    email = models.EmailField()",
        "detail": "medico.models",
        "documentation": {}
    },
    {
        "label": "Medico",
        "kind": 6,
        "importPath": "medico.models",
        "description": "medico.models",
        "peekOfCode": "class Medico(models.Model):\n    nome = models.CharField(max_length=200)\n    endereco = models.TextField()\n    telefone = models.CharField(max_length=20)\n    email = models.EmailField()\n    data_nascimento = models.DateField()\n    crm = models.CharField(max_length=50)\n    especialidade = models.ForeignKey(Especialidade, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.nome",
        "detail": "medico.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "medico.urls",
        "description": "medico.urls",
        "peekOfCode": "urlpatterns = [\n    path('especialidades/', EspecialidadeListView.as_view(), name='especialidade_list'),\n    path('especialidades/create/', EspecialidadeCreateView.as_view(), name='especialidade_create'),\n    path('especialidades/<int:pk>/update/', EspecialidadeUpdateView.as_view(), name='especialidade_edit'),\n    path('especialidades/<int:pk>/delete/', EspecialidadeDeleteView.as_view(), name='especialidade_delete'),\n    path('medicos/', MedicoListView.as_view(), name='medico_list'),\n    path('medicos/create/', MedicoCreateView.as_view(), name='medico_create'),\n    path('medicos/<int:pk>/update/', MedicoUpdateView.as_view(), name='medico_edit'),\n    path('medicos/<int:pk>/delete/', MedicoDeleteView.as_view(), name='medico_delete'),\n]",
        "detail": "medico.urls",
        "documentation": {}
    },
    {
        "label": "EspecialidadeListView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class EspecialidadeListView(ListView):\n    model = Especialidade\n    template_name = 'especialidade_list.html'  \nclass EspecialidadeCreateView(CreateView):\n    model = Especialidade\n    form_class = EspecialidadeForm\n    template_name = 'especialidade_form.html'\n    success_url = reverse_lazy('especialidade_list')\nclass EspecialidadeUpdateView(UpdateView):\n    model = Especialidade",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "EspecialidadeCreateView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class EspecialidadeCreateView(CreateView):\n    model = Especialidade\n    form_class = EspecialidadeForm\n    template_name = 'especialidade_form.html'\n    success_url = reverse_lazy('especialidade_list')\nclass EspecialidadeUpdateView(UpdateView):\n    model = Especialidade\n    form_class = EspecialidadeForm\n    template_name = 'especialidade_form.html'\n    success_url = reverse_lazy('especialidade_list')",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "EspecialidadeUpdateView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class EspecialidadeUpdateView(UpdateView):\n    model = Especialidade\n    form_class = EspecialidadeForm\n    template_name = 'especialidade_form.html'\n    success_url = reverse_lazy('especialidade_list')\nclass EspecialidadeDeleteView(DeleteView):\n    model = Especialidade\n    template_name = 'especialidade_confirm_delete.html'\n    success_url = reverse_lazy('especialidade_list')\nclass MedicoListView(ListView):",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "EspecialidadeDeleteView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class EspecialidadeDeleteView(DeleteView):\n    model = Especialidade\n    template_name = 'especialidade_confirm_delete.html'\n    success_url = reverse_lazy('especialidade_list')\nclass MedicoListView(ListView):\n    model = Medico\n    template_name = 'medico_list.html'\nclass MedicoCreateView(CreateView):\n    model = Medico\n    form_class = MedicoForm",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "MedicoListView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class MedicoListView(ListView):\n    model = Medico\n    template_name = 'medico_list.html'\nclass MedicoCreateView(CreateView):\n    model = Medico\n    form_class = MedicoForm\n    template_name = 'medico_form.html'\n    success_url = reverse_lazy('medico_list')\nclass MedicoUpdateView(UpdateView):\n    model = Medico",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "MedicoCreateView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class MedicoCreateView(CreateView):\n    model = Medico\n    form_class = MedicoForm\n    template_name = 'medico_form.html'\n    success_url = reverse_lazy('medico_list')\nclass MedicoUpdateView(UpdateView):\n    model = Medico\n    form_class = MedicoForm\n    template_name = 'medico_form.html'\n    success_url = reverse_lazy('medico_list')",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "MedicoUpdateView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class MedicoUpdateView(UpdateView):\n    model = Medico\n    form_class = MedicoForm\n    template_name = 'medico_form.html'\n    success_url = reverse_lazy('medico_list')\nclass MedicoDeleteView(DeleteView):\n    model = Medico\n    template_name = 'medico_confirm_delete.html'\n    success_url = reverse_lazy('medico_list')\n# Create your views here.",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "MedicoDeleteView",
        "kind": 6,
        "importPath": "medico.views",
        "description": "medico.views",
        "peekOfCode": "class MedicoDeleteView(DeleteView):\n    model = Medico\n    template_name = 'medico_confirm_delete.html'\n    success_url = reverse_lazy('medico_list')\n# Create your views here.",
        "detail": "medico.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]